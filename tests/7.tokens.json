{
    "tokens": [
        {
            "type": 1,
            "val": "/* test #7\n * testing how let-er works\n */",
            "literal": 1
        },
        {
            "type": 0,
            "val": "\n\n"
        },
        {
            "type": 6,
            "tokens": [
                {
                    "type": 2,
                    "val": "let"
                },
                {
                    "type": 0,
                    "val": " "
                },
                {
                    "type": 3,
                    "val": "("
                },
                {
                    "type": 4,
                    "val": "a"
                },
                {
                    "type": 0,
                    "val": " "
                },
                {
                    "type": 3,
                    "val": "=",
                    "assignment": true
                },
                {
                    "type": 5,
                    "val": " function () {\n    "
                },
                {
                    "type": 6,
                    "tokens": [
                        {
                            "type": 2,
                            "val": "let"
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "("
                        },
                        {
                            "type": 4,
                            "val": "b"
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "=",
                            "assignment": true
                        },
                        {
                            "type": 5,
                            "val": " function () {\n        "
                        },
                        {
                            "type": 6,
                            "tokens": [
                                {
                                    "type": 2,
                                    "val": "let"
                                },
                                {
                                    "type": 0,
                                    "val": " "
                                },
                                {
                                    "type": 3,
                                    "val": "("
                                },
                                {
                                    "type": 4,
                                    "val": "c"
                                },
                                {
                                    "type": 0,
                                    "val": " "
                                },
                                {
                                    "type": 3,
                                    "val": "=",
                                    "assignment": true
                                },
                                {
                                    "type": 5,
                                    "val": " function () {}"
                                },
                                {
                                    "type": 3,
                                    "val": ")",
                                    "let_decl_list_complete": true
                                },
                                {
                                    "type": 0,
                                    "val": " "
                                },
                                {
                                    "type": 3,
                                    "val": "{",
                                    "let_header_complete": true
                                }
                            ]
                        },
                        {
                            "type": 0,
                            "val": "\n            c();\n            "
                        },
                        {
                            "type": 6,
                            "tokens": [
                                {
                                    "type": 2,
                                    "val": "let"
                                },
                                {
                                    "type": 0,
                                    "val": " "
                                },
                                {
                                    "type": 3,
                                    "val": "("
                                },
                                {
                                    "type": 4,
                                    "val": "c2"
                                },
                                {
                                    "type": 0,
                                    "val": " "
                                },
                                {
                                    "type": 3,
                                    "val": "=",
                                    "assignment": true
                                },
                                {
                                    "type": 5,
                                    "val": " function () {\n                return 3;\n            }"
                                },
                                {
                                    "type": 3,
                                    "val": ")",
                                    "let_decl_list_complete": true
                                },
                                {
                                    "type": 0,
                                    "val": " "
                                },
                                {
                                    "type": 3,
                                    "val": "{",
                                    "let_header_complete": true
                                }
                            ]
                        },
                        {
                            "type": 0,
                            "val": "\n                c2()++;\n            "
                        },
                        {
                            "type": 3,
                            "val": "}",
                            "let_block_complete": true
                        },
                        {
                            "type": 0,
                            "val": "\n        "
                        },
                        {
                            "type": 3,
                            "val": "}",
                            "let_block_complete": true
                        },
                        {
                            "type": 5,
                            "val": "\n    }"
                        },
                        {
                            "type": 3,
                            "val": ")",
                            "let_decl_list_complete": true
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "{",
                            "let_header_complete": true
                        }
                    ]
                },
                {
                    "type": 0,
                    "val": "\n        b();\n        "
                },
                {
                    "type": 6,
                    "tokens": [
                        {
                            "type": 2,
                            "val": "let"
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "("
                        },
                        {
                            "type": 4,
                            "val": "b2"
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "=",
                            "assignment": true
                        },
                        {
                            "type": 5,
                            "val": " function () {\n            return 3;\n        }"
                        },
                        {
                            "type": 3,
                            "val": ")",
                            "let_decl_list_complete": true
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "{",
                            "let_header_complete": true
                        }
                    ]
                },
                {
                    "type": 0,
                    "val": "\n            b2()++;\n        "
                },
                {
                    "type": 3,
                    "val": "}",
                    "let_block_complete": true
                },
                {
                    "type": 0,
                    "val": "\n    "
                },
                {
                    "type": 3,
                    "val": "}",
                    "let_block_complete": true
                },
                {
                    "type": 5,
                    "val": "\n}"
                },
                {
                    "type": 3,
                    "val": ")",
                    "let_decl_list_complete": true
                },
                {
                    "type": 0,
                    "val": " "
                },
                {
                    "type": 3,
                    "val": "{",
                    "let_header_complete": true
                }
            ]
        },
        {
            "type": 0,
            "val": "\n    a();\n    "
        },
        {
            "type": 6,
            "tokens": [
                {
                    "type": 2,
                    "val": "let"
                },
                {
                    "type": 0,
                    "val": " "
                },
                {
                    "type": 3,
                    "val": "("
                },
                {
                    "type": 4,
                    "val": "a2"
                },
                {
                    "type": 0,
                    "val": " "
                },
                {
                    "type": 3,
                    "val": "=",
                    "assignment": true
                },
                {
                    "type": 5,
                    "val": " function () {\n        "
                },
                {
                    "type": 6,
                    "tokens": [
                        {
                            "type": 2,
                            "val": "let"
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "("
                        },
                        {
                            "type": 4,
                            "val": "a22"
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "=",
                            "assignment": true
                        },
                        {
                            "type": 5,
                            "val": " function () {\n            return 3;\n        }"
                        },
                        {
                            "type": 3,
                            "val": ")",
                            "let_decl_list_complete": true
                        },
                        {
                            "type": 0,
                            "val": " "
                        },
                        {
                            "type": 3,
                            "val": "{",
                            "let_header_complete": true
                        }
                    ]
                },
                {
                    "type": 0,
                    "val": "\n            return a22();\n        "
                },
                {
                    "type": 3,
                    "val": "}",
                    "let_block_complete": true
                },
                {
                    "type": 5,
                    "val": "\n    }"
                },
                {
                    "type": 3,
                    "val": ")",
                    "let_decl_list_complete": true
                },
                {
                    "type": 0,
                    "val": " "
                },
                {
                    "type": 3,
                    "val": "{",
                    "let_header_complete": true
                }
            ]
        },
        {
            "type": 0,
            "val": "\n        return a2();\n    "
        },
        {
            "type": 3,
            "val": "}",
            "let_block_complete": true
        },
        {
            "type": 0,
            "val": "\n"
        },
        {
            "type": 3,
            "val": "}",
            "let_block_complete": true
        },
        {
            "type": 0,
            "val": "\n"
        }
    ],
    "warnings": [
        "Skipping: let (e) foo(",
        "Skipping: let (g=)",
        "Unterminated let-block at end of code",
        "Skipping: let (b)",
        "Skipping: let ",
        "Skipping: let ",
        "Skipping: let (i) ",
        "Skipping: let(j) ",
        "Skipping: let ",
        "Skipping: let (p)\t\t"
    ]
}